package org.apache.commons.lang3.functionRandoop;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableFunction> failablePredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableBiConsumer> failableIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> failableFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Class<?>, org.apache.commons.lang3.function.Suppliers> wildcardClassBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableToIntFunction, java.lang.Throwable> failableToIntBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> failableToIntBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableConsumer> failableToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableDoubleConsumer> failableBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongUnaryOperator, java.lang.Throwable> failableIntConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Object, org.apache.commons.lang3.function.FailableLongToDoubleFunction> objBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Class<?>, org.apache.commons.lang3.function.FailableToDoubleBiFunction> wildcardClassFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> failableBiPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Class<?>, org.apache.commons.lang3.function.FailableDoubleConsumer> failableLongToDoubleFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableIntToLongFunction> failableDoublePredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableLongToIntFunction> failableIntToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> annotatedElementFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator> failableToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> typeFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableBiPredicate> suppliersBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Comparable<java.lang.String>, java.lang.Comparable<java.lang.String>> strComparableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Class<?>, org.apache.commons.lang3.function.FailableIntFunction> wildcardClassBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> failablePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableBiPredicate> failableBiConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableLongPredicate> failableIntUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntFunction, java.lang.String, java.lang.Throwable> failableIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.String, java.lang.Object> failableObjLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.String, org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> strFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction> failableFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Object, org.apache.commons.lang3.function.FailableBiFunction> objBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableFunction> failableDoublePredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.reflect.Type, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> failableDoubleConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer31.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer38.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer37.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer4.andThen(booleanConsumer48);
        java.lang.Class<?> wildcardClass51 = booleanConsumer4.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.String, org.apache.commons.lang3.function.FailableObjLongConsumer> strFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableFunction> failableToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableLongConsumer> strComparableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableIntPredicate> failableIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> genericDeclarationFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer0.accept(false);
        booleanConsumer0.accept(true);
        booleanConsumer0.accept(false);
        java.lang.Class<?> wildcardClass7 = booleanConsumer0.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> failablePredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableLongConsumer> failableToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer7.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer10.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        booleanConsumer7.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer0.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer17.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        booleanConsumer31.accept(false);
        booleanConsumer31.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer27.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer42.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer49.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer48.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer31.andThen(booleanConsumer48);
        booleanConsumer61.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer61.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer7.andThen(booleanConsumer67);
        booleanConsumer7.accept(true);
        booleanConsumer7.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableDoublePredicate> failableDoublePredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer13.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        booleanConsumer27.accept(false);
        booleanConsumer27.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer23.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer36.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer41.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer27.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer8.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer75.accept(false);
        booleanConsumer75.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer8.andThen(booleanConsumer75);
        java.lang.Class<?> wildcardClass81 = booleanConsumer80.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableLongFunction> failableToIntBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.CharSequence, org.apache.commons.lang3.function.FailableIntFunction> charSequenceBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer9.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer9.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer13.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer20.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer20.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer20.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer19.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer36.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer41.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer30.andThen(booleanConsumer68);
        booleanConsumer73.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer3.andThen(booleanConsumer73);
        booleanConsumer3.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer76);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failableIntToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableToIntFunction> strBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> booleanConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableBiPredicate> genericDeclarationBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failableIntConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction> failableToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.BooleanConsumer, java.lang.Throwable> failableLongPredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.io.Serializable, org.apache.commons.lang3.function.FailableToDoubleBiFunction> serializableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableConsumer, java.lang.Throwable> failableObjIntConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator> failableDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> failableToIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.io.Serializable, java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailablePredicate> serializableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> failableDoubleToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.reflect.AnnotatedElement, java.lang.Throwable> failableDoubleToLongFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableDoubleConsumer> failableToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailablePredicate> failableToIntBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.BooleanConsumer> failableLongToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableDoubleToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableIntConsumer, java.lang.Throwable> failableLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableBiConsumer> failableBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.BooleanConsumer> failableObjLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiPredicate, java.lang.String, java.lang.reflect.AnnotatedElement, java.lang.Throwable> failableBiPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableObjIntConsumer> failableIntToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableBiPredicate> failableFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.CharSequence> failableDoubleConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableLongPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> strFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableBiFunction> strComparableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Class<?>> failableToDoubleBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableToLongFunction> suppliersFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.BooleanConsumer> annotatedElementFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Throwable> failableLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.CharSequence> failableToLongBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> failableLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.reflect.AnnotatedElement, java.lang.Class<?>, java.lang.Throwable> failableIntUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(true);
        booleanConsumer8.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer15.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer15.andThen(booleanConsumer18);
        booleanConsumer18.accept(false);
        booleanConsumer18.accept(true);
        booleanConsumer18.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer31.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer31.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer30.andThen(booleanConsumer34);
        booleanConsumer30.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer18.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer8.andThen(booleanConsumer18);
        java.lang.Class<?> wildcardClass41 = booleanConsumer40.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer28.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer28.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer23.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        booleanConsumer51.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer28.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer14.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer65.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer60.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer73.andThen(booleanConsumer74);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer73.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer78.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer78.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer77.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = booleanConsumer84.andThen(booleanConsumer85);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer84.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer89.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer89.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer88.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer77.andThen(booleanConsumer92);
        booleanConsumer92.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer98 = booleanConsumer65.andThen(booleanConsumer92);
        java.lang.Class<?> wildcardClass99 = booleanConsumer65.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableLongUnaryOperator, java.lang.reflect.Type> failableObjDoubleConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.reflect.Type, org.apache.commons.lang3.function.FailableToLongBiFunction> failableLongToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Class<?>> wildcardClassBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableLongFunction> failableToLongBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer37.andThen(booleanConsumer45);
        booleanConsumer45.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer50.andThen(booleanConsumer58);
        booleanConsumer58.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer45.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer63);
        booleanConsumer64.accept(true);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        booleanConsumer71.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer64.andThen(booleanConsumer71);
        booleanConsumer71.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer74);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer37.andThen(booleanConsumer45);
        booleanConsumer45.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer50.andThen(booleanConsumer58);
        booleanConsumer58.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer45.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer63);
        java.lang.Class<?> wildcardClass65 = booleanConsumer64.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator> failableIntPredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableLongToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> strFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableLongToIntFunction> failableIntToLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableToLongFunction> failableObjLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.CharSequence, org.apache.commons.lang3.function.FailableDoubleToIntFunction> charSequenceFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableBiFunction> failableToDoubleBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Class<?>> failableIntToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> failableToDoubleFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableDoubleFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.String, org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.Throwable> strFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failablePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableIntToDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> strComparableFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.reflect.AnnotatedElement> failableIntToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer65.accept(false);
        booleanConsumer65.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer57.andThen(booleanConsumer65);
        java.lang.Class<?> wildcardClass71 = booleanConsumer65.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongFunction, java.lang.CharSequence> failableLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.io.Serializable, org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> serializableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        booleanConsumer25.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer29.accept(false);
        booleanConsumer29.accept(true);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer25.andThen(booleanConsumer29);
        java.lang.Class<?> wildcardClass37 = booleanConsumer36.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        booleanConsumer29.accept(false);
        booleanConsumer29.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.Type, org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableIntPredicate> typeBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer45.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer45.andThen(booleanConsumer48);
        booleanConsumer45.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer52.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        booleanConsumer52.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer45.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer62.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer67.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer66.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer73.andThen(booleanConsumer74);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer73.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer78.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer78.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer77.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer66.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer85.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer66.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = booleanConsumer52.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer31.andThen(booleanConsumer87);
        booleanConsumer90.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableBiConsumer> failableObjDoubleConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.lang3.function.FailablePredicate failablePredicate0 = org.apache.commons.lang3.function.FailablePredicate.TRUE;
        java.lang.Class<?> wildcardClass1 = failablePredicate0.getClass();
        org.junit.Assert.assertNotNull(failablePredicate0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableLongToIntFunction> failableIntUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Throwable> failableToDoubleBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Throwable> charSequenceFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.String, java.lang.Throwable> failableIntUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failableObjIntConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer7.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer7.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer7.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        booleanConsumer21.accept(false);
        booleanConsumer21.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer17.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer31.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer31.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer35.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer47.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer47.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer46.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer35.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer30.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        booleanConsumer58.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer35.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer63.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer21.andThen(booleanConsumer66);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer73.andThen(booleanConsumer74);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer73.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer72.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer67.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer3.andThen(booleanConsumer67);
        java.lang.Class<?> wildcardClass81 = booleanConsumer3.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongPredicate, java.lang.String> failableLongPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.io.Serializable, org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> serializableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableLongPredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToLongFunction, java.lang.reflect.Type, java.lang.Throwable> failableToLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Object, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Comparable<java.lang.String>, java.lang.Throwable> objFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer7.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer10.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        booleanConsumer7.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer0.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer21.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer21.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer21.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer7.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer45.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer45.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer45.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer56.andThen(booleanConsumer59);
        booleanConsumer59.accept(false);
        booleanConsumer59.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer55.andThen(booleanConsumer59);
        booleanConsumer65.accept(true);
        booleanConsumer65.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer70.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer70.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer74.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer81.andThen(booleanConsumer82);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer81.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer86.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer86.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer85.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer74.andThen(booleanConsumer89);
        booleanConsumer74.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer65.andThen(booleanConsumer74);
        booleanConsumer65.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer98 = booleanConsumer7.andThen(booleanConsumer65);
        java.lang.Class<?> wildcardClass99 = booleanConsumer7.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer7.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer10.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        booleanConsumer7.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer0.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer17.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        booleanConsumer31.accept(false);
        booleanConsumer31.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer27.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer42.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer49.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer48.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer31.andThen(booleanConsumer48);
        booleanConsumer61.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer61.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer7.andThen(booleanConsumer67);
        booleanConsumer67.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer67.andThen(booleanConsumer71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.io.Serializable, java.lang.Throwable> annotatedElementFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> failableDoubleToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableFunction, java.lang.Throwable> failableIntToDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.BooleanConsumer> failableFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableObjDoubleConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableIntConsumer> failableDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableConsumer> failableConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableToIntFunction, java.lang.Throwable> failableDoubleToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Throwable> failableToLongBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction> failableIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongPredicate, java.lang.reflect.AnnotatedElement> failableLongPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        booleanConsumer29.accept(true);
        booleanConsumer29.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableIntToDoubleFunction> failableLongUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableConsumer> strComparableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        booleanConsumer56.accept(false);
        booleanConsumer56.accept(true);
        booleanConsumer56.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer69.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer68.andThen(booleanConsumer72);
        booleanConsumer68.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer56.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer29.andThen(booleanConsumer77);
        java.lang.Class<?> wildcardClass79 = booleanConsumer78.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.CharSequence, org.apache.commons.lang3.function.FailableFunction> charSequenceFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> failableToLongBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction> genericDeclarationBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableToDoubleBiFunction> failablePredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableToDoubleFunction> annotatedElementBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableToIntFunction> failableLongPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> failableIntToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> genericDeclarationFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.BooleanConsumer, java.lang.Throwable> failableDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Object> failableIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer50.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer39.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer30.andThen(booleanConsumer54);
        booleanConsumer58.accept(true);
        booleanConsumer58.accept(true);
        java.lang.Class<?> wildcardClass63 = booleanConsumer58.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableIntFunction> annotatedElementBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableBiPredicate> failableToIntBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableLongFunction> failableBiConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Throwable> failableLongToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer27.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        booleanConsumer41.accept(false);
        booleanConsumer41.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer37.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer59.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer58.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer41.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer2.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer73.andThen(booleanConsumer74);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer73.andThen(booleanConsumer76);
        booleanConsumer73.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer2.andThen(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer80);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> strComparableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Class<?>, java.lang.Class<?>, java.lang.Throwable> wildcardClassFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Throwable> failableDoublePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableToIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> booleanConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        booleanConsumer4.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer20.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer31.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer20.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer15.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        booleanConsumer43.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer20.andThen(booleanConsumer43);
        booleanConsumer43.accept(true);
        booleanConsumer43.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer4.andThen(booleanConsumer43);
        java.lang.Class<?> wildcardClass53 = booleanConsumer43.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> strFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction> failableLongPredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableLongToIntFunction> failableDoubleConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableToIntFunction, java.lang.Throwable> failableToDoubleBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableBiPredicate> failableToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Class<?>, org.apache.commons.lang3.function.FailableToLongFunction> failableIntToDoubleFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> failableLongToIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableObjIntConsumer> failableIntUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailablePredicate, java.lang.Throwable> failableLongToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableObjIntConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.Suppliers, java.lang.Class<?>> failableLongUnaryOperatorBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction> genericDeclarationBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableIntPredicate> failableIntToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableConsumer, java.lang.Throwable> failableIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntToLongFunction> failableObjIntConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.Suppliers, java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableIntPredicate> suppliersBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Throwable> failableIntPredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableIntConsumer, java.lang.Throwable> failableBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.Comparable<java.lang.String>> failableIntToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableObjLongConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        booleanConsumer31.accept(true);
        booleanConsumer31.accept(true);
        booleanConsumer31.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableLongPredicate> failablePredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableIntToLongFunction> failableIntUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.io.Serializable, java.lang.Throwable> failableDoubleToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableDoubleFunction> failableIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiConsumer, java.io.Serializable> failableBiConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.Throwable> failableToLongFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer37.andThen(booleanConsumer45);
        booleanConsumer45.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer50.andThen(booleanConsumer58);
        booleanConsumer58.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer45.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer63);
        booleanConsumer64.accept(true);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        booleanConsumer71.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer64.andThen(booleanConsumer71);
        java.lang.Class<?> wildcardClass75 = booleanConsumer71.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableIntToLongFunction> annotatedElementFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> failableDoubleToLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Throwable> failableIntToDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer29.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer4.andThen(booleanConsumer51);
        booleanConsumer4.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.reflect.AnnotatedElement, java.lang.Throwable> suppliersFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator> failableToDoubleBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> failableBiPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> failableObjLongConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableBiFunction> booleanConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Throwable> failableDoubleToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Throwable> failableLongToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer28.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer28.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer23.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        booleanConsumer51.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer28.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer14.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer65.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer60.andThen(booleanConsumer65);
        booleanConsumer72.accept(false);
        booleanConsumer72.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.reflect.GenericDeclaration, java.lang.Throwable> failableDoubleFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntToLongFunction> failableObjIntConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableLongToIntFunction> failableDoubleConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.Suppliers> failableLongToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableBiConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.Throwable> failableToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        booleanConsumer7.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer36.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer47.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer36.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer31.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer56.andThen(booleanConsumer59);
        booleanConsumer59.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer36.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer69.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer68.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer80.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer80.andThen(booleanConsumer83);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer79.andThen(booleanConsumer83);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = booleanConsumer68.andThen(booleanConsumer83);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer59.andThen(booleanConsumer83);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer7.andThen(booleanConsumer59);
        java.lang.Class<?> wildcardClass89 = booleanConsumer7.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableDoubleFunction> failableIntPredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, java.lang.Object, java.lang.Throwable> failableLongUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableConsumer> strComparableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.reflect.Type, java.lang.Throwable> failableToIntBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> failableFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableObjIntConsumer> failableLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Throwable> strComparableFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableLongFunction> failableIntToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailablePredicate, java.lang.Throwable> failableIntUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer29.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer4.andThen(booleanConsumer51);
        booleanConsumer4.accept(true);
        booleanConsumer4.accept(false);
        booleanConsumer4.accept(false);
        java.lang.Class<?> wildcardClass59 = booleanConsumer4.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableToLongFunction, java.io.Serializable, java.lang.Throwable> strComparableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongFunction, java.lang.reflect.Type, java.lang.Throwable> failableLongFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> failableLongUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> failableFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableBiFunction> failableDoublePredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableObjDoubleConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailablePredicate> failableLongPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> failableDoubleUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableIntConsumer, java.lang.Throwable> wildcardClassFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableFunction, java.lang.CharSequence> failableFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableLongPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Comparable<java.lang.String>, java.lang.reflect.Type, java.lang.Throwable> strComparableFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer13.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        booleanConsumer27.accept(false);
        booleanConsumer27.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer23.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer36.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer41.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer27.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer8.andThen(booleanConsumer27);
        booleanConsumer8.accept(false);
        booleanConsumer8.accept(false);
        booleanConsumer8.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.Suppliers, java.lang.reflect.AnnotatedElement, java.lang.Throwable> suppliersFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableToDoubleFunction> failableObjLongConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        booleanConsumer30.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        booleanConsumer40.accept(false);
        booleanConsumer40.accept(false);
        booleanConsumer40.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer59.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer58.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer71.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer71.andThen(booleanConsumer74);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer76.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = booleanConsumer75.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer82.andThen(booleanConsumer83);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = booleanConsumer82.andThen(booleanConsumer85);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = booleanConsumer87.andThen(booleanConsumer88);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer87.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer86.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer75.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer58.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer40.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer96 = booleanConsumer30.andThen(booleanConsumer58);
        booleanConsumer30.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer96);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableLongToIntFunction, java.io.Serializable> failableObjIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.String> failableDoublePredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, java.io.Serializable, java.lang.Throwable> failableToLongBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.String> failableBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableLongToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Class<?>> failableToDoubleBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> strComparableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailablePredicate, java.lang.String> failablePredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableLongToDoubleFunction> failableLongUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.CharSequence, org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.Throwable> charSequenceFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Object, java.lang.Throwable> failableToDoubleBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableToIntBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableLongToDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator> failableDoubleToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.Throwable> failableLongUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> failableToLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableToDoubleFunction> failableLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableDoubleUnaryOperator> failableFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableObjIntConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(true);
        booleanConsumer3.accept(true);
        booleanConsumer3.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Class<?>, org.apache.commons.lang3.function.BooleanConsumer, java.lang.Throwable> wildcardClassFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.CharSequence, org.apache.commons.lang3.function.FailableBiConsumer> charSequenceBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> failableToIntBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Throwable> failableIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailablePredicate> failableDoubleToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntConsumer, java.lang.reflect.GenericDeclaration, java.lang.Throwable> failableIntConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Comparable<java.lang.String>> failableConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> failableLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.reflect.Type, java.lang.Throwable> failableLongConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.io.Serializable> failableIntToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Throwable> failableLongToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer0.accept(false);
        booleanConsumer0.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer10.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer10.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer5.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        booleanConsumer19.accept(false);
        booleanConsumer19.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer34.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer33.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer45.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer45.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer44.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer33.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer28.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        booleanConsumer56.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer33.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer19.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer0.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer65.andThen(booleanConsumer67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableIntUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> failableLongConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Throwable> typeFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> failableIntUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Throwable> failableLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableLongFunction> failableObjDoubleConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> failableDoubleUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableFunction, java.lang.reflect.Type, java.lang.Throwable> failableFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableObjLongConsumer> failableLongUnaryOperatorBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntConsumer, java.io.Serializable, org.apache.commons.lang3.function.BooleanConsumer> failableIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableBiConsumer> failableObjLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableIntPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.Object, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> objFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> failableDoubleToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Class<?>, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failableDoubleUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction> failableToLongBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer7.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer10.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        booleanConsumer7.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer0.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer21.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer21.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer21.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer7.andThen(booleanConsumer42);
        booleanConsumer42.accept(false);
        java.lang.Class<?> wildcardClass47 = booleanConsumer42.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(false);
        java.lang.Class<?> wildcardClass55 = booleanConsumer20.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableBiConsumer> failableDoubleToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.Throwable> failableIntPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableDoubleUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.Throwable> failableIntConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailablePredicate, java.lang.CharSequence> failablePredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> charSequenceFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.Throwable> failableToDoubleBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer31.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer42.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer31.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer25.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        booleanConsumer51.accept(true);
        booleanConsumer51.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer25.andThen(booleanConsumer51);
        booleanConsumer25.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer60);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Throwable> failableDoubleToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableFunction, java.lang.reflect.Type, java.lang.Throwable> failableIntUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.String, java.lang.CharSequence, java.lang.Throwable> strFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableLongPredicate> failableObjDoubleConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Object, org.apache.commons.lang3.function.FailableIntToDoubleFunction> objFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = booleanConsumer1.andThen(booleanConsumer2);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer1.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = booleanConsumer6.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer6.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer5.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer16.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer5.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer28.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer28.andThen(booleanConsumer43);
        booleanConsumer28.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer5.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer0.andThen(booleanConsumer5);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer58.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer65.andThen(booleanConsumer66);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer65.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer70.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer70.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer69.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer58.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer53.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer78.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer78.andThen(booleanConsumer81);
        booleanConsumer81.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer58.andThen(booleanConsumer81);
        booleanConsumer81.accept(true);
        booleanConsumer81.accept(true);
        booleanConsumer81.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer0.andThen(booleanConsumer81);
        booleanConsumer92.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer92);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Comparable<java.lang.String>> failableDoubleToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.BooleanConsumer, java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> booleanConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> annotatedElementFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableDoubleUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableIntToDoubleFunction> failableIntToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer7.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer7.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer11.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer23.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer22.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer11.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer11.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer36.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer41.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer32.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer0.andThen(booleanConsumer73);
        java.lang.Class<?> wildcardClass75 = booleanConsumer73.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.String, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableDoubleToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Class<?>> failableIntUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Object, java.lang.reflect.GenericDeclaration, java.lang.Throwable> failableToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableIntConsumer> failableLongToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableToDoubleBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.reflect.Type, java.lang.CharSequence, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> typeFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> failableIntToDoubleFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableLongUnaryOperator> failableToLongBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator> failableToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableFunction> strComparableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> failableDoubleToLongFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> failableToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableToIntBiFunction> failableFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Class<?>> wildcardClassBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableToDoubleFunction> failableLongUnaryOperatorBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableToLongFunction> failableDoubleToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer28.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer28.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer23.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        booleanConsumer51.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer28.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer14.andThen(booleanConsumer59);
        booleanConsumer59.accept(false);
        booleanConsumer59.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.BooleanConsumer> failableLongPredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer37.andThen(booleanConsumer45);
        booleanConsumer45.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer50.andThen(booleanConsumer58);
        booleanConsumer58.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer45.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer63);
        booleanConsumer64.accept(false);
        java.lang.Class<?> wildcardClass67 = booleanConsumer64.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableLongUnaryOperator> typeBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer22.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer21.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer34.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer38.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer45.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer45.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer49.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer38.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer21.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer3.andThen(booleanConsumer21);
        booleanConsumer3.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableFunction> failableToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableIntToDoubleFunction> failableDoubleConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer> wildcardClassBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        booleanConsumer44.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer47.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer44.andThen(booleanConsumer47);
        booleanConsumer44.accept(false);
        booleanConsumer44.accept(false);
        booleanConsumer44.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Class<?>> failableToIntBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.reflect.Type> failableIntToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> strComparableFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableFunction, java.lang.Object> failableToLongBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator> failableToLongBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Object, java.io.Serializable, java.lang.Throwable> failableObjDoubleConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableToIntFunction, java.lang.Throwable> failableIntUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.String, java.lang.Comparable<java.lang.String>> strBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.Suppliers> failableLongToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.io.Serializable, org.apache.commons.lang3.function.FailableIntToLongFunction> serializableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        booleanConsumer2.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        booleanConsumer29.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer36.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer36.andThen(booleanConsumer40);
        booleanConsumer36.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer29.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer46.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer57.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer57.andThen(booleanConsumer60);
        booleanConsumer60.accept(false);
        booleanConsumer60.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer56.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer67.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer72.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer72.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer71.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer78.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer78.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer83.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer83.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer78.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = booleanConsumer77.andThen(booleanConsumer88);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer60.andThen(booleanConsumer77);
        booleanConsumer90.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer93.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer96 = booleanConsumer90.andThen(booleanConsumer93);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer97 = booleanConsumer36.andThen(booleanConsumer96);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer98 = booleanConsumer2.andThen(booleanConsumer96);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer96);
        org.junit.Assert.assertNotNull(booleanConsumer97);
        org.junit.Assert.assertNotNull(booleanConsumer98);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableIntConsumer> failableObjDoubleConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableIntPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        booleanConsumer44.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer47.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer44.andThen(booleanConsumer47);
        booleanConsumer44.accept(false);
        booleanConsumer44.accept(true);
        booleanConsumer44.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer44.andThen(booleanConsumer57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableToIntBiFunction> failableIntPredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = booleanConsumer1.andThen(booleanConsumer2);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer1.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = booleanConsumer6.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer6.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer5.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer16.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer5.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer5.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer43.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer32.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer26.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer0.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer58.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer58.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer57.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer69.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer68.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer57.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer57.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer52.andThen(booleanConsumer78);
        booleanConsumer78.accept(true);
        booleanConsumer78.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableObjIntConsumer> failableIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.reflect.AnnotatedElement, java.lang.Throwable> failablePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Throwable> failableDoubleToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failablePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.reflect.Type, java.lang.Throwable> failableObjIntConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer28.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer28.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer23.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        booleanConsumer51.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer28.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer14.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer65.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer60.andThen(booleanConsumer65);
        booleanConsumer72.accept(false);
        java.lang.Class<?> wildcardClass75 = booleanConsumer72.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableBiConsumer> failableObjIntConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator> failableToIntBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableDoubleToIntFunction> failableDoubleToLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Comparable<java.lang.String>> wildcardClassBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> failableBiPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableIntConsumer> failableDoubleUnaryOperatorBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = booleanConsumer1.andThen(booleanConsumer2);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer1.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = booleanConsumer6.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer6.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer5.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer16.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer5.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer28.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer28.andThen(booleanConsumer43);
        booleanConsumer28.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer5.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer0.andThen(booleanConsumer5);
        java.lang.Class<?> wildcardClass51 = booleanConsumer0.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.io.Serializable, java.lang.Object, java.lang.Throwable> serializableFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntConsumer, java.lang.Throwable> failableObjIntConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> failableDoubleToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.io.Serializable, java.lang.CharSequence, org.apache.commons.lang3.function.FailableConsumer, java.lang.Throwable> serializableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableIntFunction, java.io.Serializable> failableIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> charSequenceFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> genericDeclarationFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction> failableToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableToLongFunction> failableDoubleToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableToIntBiFunction> failableIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.Suppliers, java.lang.reflect.GenericDeclaration, java.lang.Throwable> suppliersFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.reflect.GenericDeclaration, java.lang.Throwable> failableLongToDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableConsumer> failableLongUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableToDoubleFunction> failableObjIntConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> annotatedElementFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer15.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer15.andThen(booleanConsumer18);
        booleanConsumer15.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer22.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer22.andThen(booleanConsumer26);
        booleanConsumer22.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer15.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer36.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer47.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer36.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer36.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer22.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer3.andThen(booleanConsumer57);
        java.lang.Class<?> wildcardClass63 = booleanConsumer62.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.Suppliers, java.io.Serializable, org.apache.commons.lang3.function.FailableIntUnaryOperator> suppliersBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Throwable> failableIntToDoubleFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntFunction, java.lang.CharSequence> failableToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> charSequenceFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        java.lang.Class<?> wildcardClass27 = booleanConsumer26.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> failableObjIntConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableObjIntConsumer> failableLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableIntFunction> failableConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Object> failableObjLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> strFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableDoubleFunction> failableLongUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> failableObjIntConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> strComparableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer65.accept(false);
        booleanConsumer65.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer57.andThen(booleanConsumer65);
        booleanConsumer65.accept(true);
        java.lang.Class<?> wildcardClass73 = booleanConsumer65.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiPredicate, java.io.Serializable, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> failableBiPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.reflect.AnnotatedElement, java.lang.Throwable> failableDoublePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(true);
        booleanConsumer8.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer15.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer15.andThen(booleanConsumer18);
        booleanConsumer18.accept(false);
        booleanConsumer18.accept(true);
        booleanConsumer18.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer31.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer31.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer30.andThen(booleanConsumer34);
        booleanConsumer30.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer18.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer8.andThen(booleanConsumer18);
        booleanConsumer8.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Object> failableLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.String, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Throwable> failableToDoubleFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer28.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer28.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer23.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        booleanConsumer51.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer28.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer14.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer65.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer60.andThen(booleanConsumer65);
        booleanConsumer60.accept(true);
        booleanConsumer60.accept(true);
        java.lang.Class<?> wildcardClass77 = booleanConsumer60.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> annotatedElementFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> failableLongPredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableDoubleToLongFunction> typeFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableIntFunction, java.lang.reflect.AnnotatedElement> failableToLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableIntFunction> failableLongToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongConsumer, java.lang.CharSequence, org.apache.commons.lang3.function.FailableBiConsumer> failableLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableBiFunction> failableObjIntConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.String, java.lang.Class<?>> failableDoublePredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableIntConsumer> failableToIntBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> failablePredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> failableToLongBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.Type, org.apache.commons.lang3.function.FailablePredicate, java.lang.Throwable> typeFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        booleanConsumer30.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        booleanConsumer40.accept(false);
        booleanConsumer40.accept(false);
        booleanConsumer40.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer59.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer58.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer71.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer71.andThen(booleanConsumer74);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer76.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = booleanConsumer75.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer82.andThen(booleanConsumer83);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = booleanConsumer82.andThen(booleanConsumer85);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = booleanConsumer87.andThen(booleanConsumer88);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer87.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer86.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer75.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer58.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer40.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer96 = booleanConsumer30.andThen(booleanConsumer58);
        java.lang.Class<?> wildcardClass97 = booleanConsumer96.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failableDoubleToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailablePredicate> failableDoubleUnaryOperatorBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleFunction, java.io.Serializable, java.lang.Throwable> failableIntToDoubleFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.reflect.AnnotatedElement, java.lang.Throwable> failableToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.io.Serializable, java.io.Serializable, java.lang.Throwable> serializableFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableConsumer, java.lang.Throwable> typeFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.Object, java.lang.Object, java.lang.Throwable> objFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Throwable> failableIntPredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.CharSequence, org.apache.commons.lang3.function.FailableDoubleToIntFunction> charSequenceBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableFunction, java.lang.Throwable> failableDoublePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Throwable> failableLongToIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableConsumer, java.lang.Throwable> failableLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        booleanConsumer26.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer34.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer33.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer45.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer45.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer40.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer39.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer52.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer52.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer57.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer57.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer56.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer63.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer63.andThen(booleanConsumer66);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer67.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer56.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer39.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer26.andThen(booleanConsumer75);
        booleanConsumer26.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> failableLongUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntFunction> failableObjIntConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Object, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> objFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableDoubleFunction> failableConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableIntConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> failableConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Throwable> failableDoublePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableDoublePredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableDoublePredicate> annotatedElementBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failableDoubleConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        booleanConsumer25.accept(false);
        booleanConsumer25.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer21.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer50.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer39.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer34.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        booleanConsumer62.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer39.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer25.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer72.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer72.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer77.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = booleanConsumer77.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer76.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer71.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer8.andThen(booleanConsumer71);
        java.lang.Class<?> wildcardClass85 = booleanConsumer8.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableDoublePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> strComparableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer31.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer42.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer31.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer25.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        booleanConsumer54.accept(false);
        booleanConsumer54.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer25.andThen(booleanConsumer54);
        booleanConsumer60.accept(true);
        booleanConsumer60.accept(true);
        java.lang.Class<?> wildcardClass65 = booleanConsumer60.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        java.lang.Class<?> wildcardClass5 = booleanConsumer4.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> failableToLongBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.reflect.Type, java.lang.Throwable> failableDoublePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.apache.commons.lang3.function.FailableDoubleConsumer failableDoubleConsumer0 = org.apache.commons.lang3.function.FailableDoubleConsumer.NOP;
        java.lang.Class<?> wildcardClass1 = failableDoubleConsumer0.getClass();
        org.junit.Assert.assertNotNull(failableDoubleConsumer0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableDoubleToIntFunction> failablePredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.Throwable> annotatedElementFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> failableIntPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer31.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer42.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer31.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer25.andThen(booleanConsumer49);
        booleanConsumer25.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableDoubleFunction> failableDoubleToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> strComparableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.CharSequence> failableIntToDoubleFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableFunction> failableIntToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.String, org.apache.commons.lang3.function.FailablePredicate> strBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> failableConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Object, java.lang.Throwable> failableIntUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Class<?>, java.lang.reflect.AnnotatedElement, java.lang.Throwable> wildcardClassFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableDoubleFunction> failableBiConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.BooleanConsumer> failableLongPredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failableBiConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableIntToLongFunction> strBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> failableIntToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer10.andThen(booleanConsumer21);
        booleanConsumer21.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer43.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer32.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer27.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer52.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer52.andThen(booleanConsumer55);
        booleanConsumer55.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer32.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer21.andThen(booleanConsumer59);
        booleanConsumer64.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer67.andThen(booleanConsumer70);
        booleanConsumer70.accept(false);
        booleanConsumer70.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer64.andThen(booleanConsumer70);
        booleanConsumer70.accept(false);
        booleanConsumer70.accept(true);
        java.lang.Class<?> wildcardClass81 = booleanConsumer70.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableBiFunction, java.lang.Comparable<java.lang.String>, java.lang.Throwable> failableBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer14.accept(true);
        java.lang.Class<?> wildcardClass23 = booleanConsumer14.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.Throwable> failableDoubleToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        booleanConsumer56.accept(false);
        booleanConsumer56.accept(true);
        booleanConsumer56.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer69.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer68.andThen(booleanConsumer72);
        booleanConsumer68.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer56.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer29.andThen(booleanConsumer77);
        booleanConsumer77.accept(true);
        booleanConsumer77.accept(true);
        booleanConsumer77.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Throwable> wildcardClassFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        booleanConsumer28.accept(false);
        booleanConsumer28.accept(true);
        booleanConsumer28.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer20.andThen(booleanConsumer28);
        booleanConsumer28.accept(false);
        java.lang.Class<?> wildcardClass39 = booleanConsumer28.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableLongFunction> failablePredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableDoubleToLongFunction> failablePredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableLongConsumer> failableLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer7.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer7.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer11.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer23.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer18.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer17.andThen(booleanConsumer28);
        booleanConsumer28.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer50.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer39.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer34.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        booleanConsumer62.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer39.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer28.andThen(booleanConsumer66);
        booleanConsumer71.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer74.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer74.andThen(booleanConsumer77);
        booleanConsumer77.accept(false);
        booleanConsumer77.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer71.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer3.andThen(booleanConsumer71);
        booleanConsumer71.accept(false);
        booleanConsumer71.accept(false);
        java.lang.Class<?> wildcardClass89 = booleanConsumer71.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> failablePredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> failableDoubleToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableLongConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableDoubleConsumer> strBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        booleanConsumer42.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer53.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer60.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer65.andThen(booleanConsumer66);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer65.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer64.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer53.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer48.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer73.andThen(booleanConsumer74);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer73.andThen(booleanConsumer76);
        booleanConsumer76.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer53.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer81.andThen(booleanConsumer82);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer80.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer42.andThen(booleanConsumer80);
        booleanConsumer85.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer88.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer88.andThen(booleanConsumer91);
        booleanConsumer91.accept(false);
        booleanConsumer91.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer97 = booleanConsumer85.andThen(booleanConsumer91);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer98 = booleanConsumer14.andThen(booleanConsumer91);
        java.lang.Class<?> wildcardClass99 = booleanConsumer91.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer97);
        org.junit.Assert.assertNotNull(booleanConsumer98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> failableDoublePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableIntToLongFunction> failableIntToLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailablePredicate> failableFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> wildcardClassFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableIntToDoubleFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer10.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer23.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer27.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer34.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer38.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer27.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer10.andThen(booleanConsumer42);
        booleanConsumer10.accept(true);
        booleanConsumer10.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer10.andThen(booleanConsumer51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableLongToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> annotatedElementFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableFunction, java.lang.Throwable> failableBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer37.andThen(booleanConsumer45);
        booleanConsumer45.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer50.andThen(booleanConsumer58);
        booleanConsumer58.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer45.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer63);
        booleanConsumer64.accept(true);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        booleanConsumer71.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer64.andThen(booleanConsumer71);
        java.lang.Class<?> wildcardClass75 = booleanConsumer64.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableDoublePredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableLongToIntFunction> failableDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableIntPredicate> failableIntConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator> genericDeclarationBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }
}

