package org.apache.commons.lang3.functionRandoop;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failableToLongBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableIntFunction> failableToIntBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> failableBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableFunction, java.lang.String, org.apache.commons.lang3.function.FailableToDoubleBiFunction> failableFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.CharSequence> failableIntToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableConsumer, java.lang.Throwable> booleanConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> failableBiPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableObjLongConsumer> failableToIntBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableIntUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.CharSequence, java.lang.Comparable<java.lang.String>> failableObjIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableToLongFunction> failableIntToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, java.lang.reflect.Type, java.lang.Throwable> failableIntPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        booleanConsumer31.accept(true);
        java.lang.Class<?> wildcardClass47 = booleanConsumer31.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.reflect.GenericDeclaration> suppliersBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> failableLongUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableIntFunction> failableObjLongConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.Throwable> strFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Throwable> annotatedElementFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Throwable> failableBiPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.String, java.io.Serializable> strBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Class<?>, java.lang.Throwable> failableIntToDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Object, java.lang.Object, java.lang.Throwable> objFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Object, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> objFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> failableConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.io.Serializable, java.lang.reflect.AnnotatedElement> serializableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer10.andThen(booleanConsumer21);
        booleanConsumer21.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer43.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer32.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer27.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer52.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer52.andThen(booleanConsumer55);
        booleanConsumer55.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer32.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer21.andThen(booleanConsumer59);
        booleanConsumer64.accept(false);
        booleanConsumer64.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableObjIntConsumer> failableFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableLongConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer10.andThen(booleanConsumer21);
        booleanConsumer21.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer43.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer32.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer27.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer52.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer52.andThen(booleanConsumer55);
        booleanConsumer55.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer32.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer21.andThen(booleanConsumer59);
        java.lang.Class<?> wildcardClass65 = booleanConsumer59.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableLongConsumer> failableDoubleToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        booleanConsumer44.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer47.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer44.andThen(booleanConsumer47);
        booleanConsumer44.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer44.andThen(booleanConsumer53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.io.Serializable, org.apache.commons.lang3.function.FailableDoubleToIntFunction> serializableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.Suppliers> failableObjLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Object, org.apache.commons.lang3.function.FailableIntToLongFunction> failableToIntBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableBiFunction, java.lang.reflect.AnnotatedElement, java.lang.Throwable> failableBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failableIntToDoubleFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.io.Serializable, org.apache.commons.lang3.function.FailableIntToDoubleFunction> serializableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Class<?>, org.apache.commons.lang3.function.FailableBiPredicate> wildcardClassBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableToDoubleFunction> failableDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> failableLongUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableDoubleToLongFunction> failableLongUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntFunction, java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> failableIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableDoubleFunction> failablePredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.String, java.lang.Throwable> failableToDoubleBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableSupplier<org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> failableObjLongConsumerFailableSupplier1 = org.apache.commons.lang3.function.MethodInvokers.asFailableSupplier(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Comparable<java.lang.String>> failableToIntBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableConsumer, java.lang.Throwable> failableIntPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> failableToIntBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Class<?>> failableIntUnaryOperatorBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Class<?>, java.lang.Throwable> failableDoubleToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        booleanConsumer44.accept(false);
        java.lang.Class<?> wildcardClass47 = booleanConsumer44.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableToLongFunction> failableIntToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> failableBiPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableBiConsumer> genericDeclarationFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableIntFunction> failableObjDoubleConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> typeFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> failableDoubleToLongFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableToDoubleFunction> failableToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Class<?>, org.apache.commons.lang3.function.FailableLongConsumer> wildcardClassFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjLongConsumer, java.io.Serializable> failableObjLongConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableLongToIntFunction> failableToLongBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.io.Serializable, org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> serializableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableDoublePredicate> failableDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableBiPredicate> failableObjDoubleConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> failableToDoubleFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        java.lang.Class<?> wildcardClass45 = booleanConsumer31.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.reflect.GenericDeclaration> failableIntToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Throwable> failableToLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableDoubleFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer37.andThen(booleanConsumer45);
        booleanConsumer45.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer50.andThen(booleanConsumer58);
        booleanConsumer58.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer45.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer63);
        booleanConsumer64.accept(true);
        booleanConsumer64.accept(false);
        java.lang.Class<?> wildcardClass69 = booleanConsumer64.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        java.lang.Class<?> wildcardClass9 = booleanConsumer3.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableBiPredicate> failableIntToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator> failableToIntBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableLongConsumer> failableDoublePredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> failableIntConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableIntConsumer> failableLongToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> failableDoublePredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> annotatedElementFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.reflect.AnnotatedElement> failableDoubleUnaryOperatorBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Comparable<java.lang.String>, java.lang.Throwable> failableDoubleToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Comparable<java.lang.String>> failableObjLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Object, org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableDoubleConsumer> objBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, java.io.Serializable, java.lang.Throwable> failableDoublePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failableLongPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.String> failableLongToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Throwable> genericDeclarationFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableLongToIntFunction> failableToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.reflect.Type, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableToDoubleBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer10.andThen(booleanConsumer21);
        booleanConsumer21.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer43.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer32.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer27.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer52.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer52.andThen(booleanConsumer55);
        booleanConsumer55.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer32.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer21.andThen(booleanConsumer59);
        booleanConsumer59.accept(false);
        java.lang.Class<?> wildcardClass67 = booleanConsumer59.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, java.lang.CharSequence, java.lang.Throwable> failableIntPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableBiFunction> failableLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer0.accept(false);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer12.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer23.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer12.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer7.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        booleanConsumer35.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer12.andThen(booleanConsumer35);
        booleanConsumer35.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer47.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer58.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer47.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer47.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer70.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer70.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer74.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer81.andThen(booleanConsumer82);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer81.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer86.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer86.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer85.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer74.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer68.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer42.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer35.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer96 = booleanConsumer0.andThen(booleanConsumer35);
        java.lang.Class<?> wildcardClass97 = booleanConsumer0.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableIntUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableDoubleConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableToLongFunction> failableLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableLongFunction> strComparableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.String, org.apache.commons.lang3.function.FailableIntConsumer> strFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailablePredicate> failableToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.reflect.Type, org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableToIntFunction, java.lang.Throwable> typeFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.CharSequence, java.lang.reflect.GenericDeclaration> charSequenceFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> failableToIntBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Object, org.apache.commons.lang3.function.FailableIntFunction> objFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableDoubleConsumer> failableToIntBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.reflect.GenericDeclaration> failableLongToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableToLongBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        booleanConsumer30.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        booleanConsumer40.accept(false);
        booleanConsumer40.accept(false);
        booleanConsumer40.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer59.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer58.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer71.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer71.andThen(booleanConsumer74);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer76.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = booleanConsumer75.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer82.andThen(booleanConsumer83);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = booleanConsumer82.andThen(booleanConsumer85);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = booleanConsumer87.andThen(booleanConsumer88);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer87.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer86.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer75.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer58.andThen(booleanConsumer90);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer40.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer96 = booleanConsumer30.andThen(booleanConsumer58);
        java.lang.Class<?> wildcardClass97 = booleanConsumer58.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> failableBiConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableObjLongConsumer> failableDoubleUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableFunction> failableLongToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableDoubleToLongFunction> failableLongToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableBiConsumer> genericDeclarationBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> failableIntPredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableObjIntConsumer> strComparableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Throwable> failableLongUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator, java.io.Serializable, java.lang.Throwable> failableToIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableDoubleToIntFunction> wildcardClassBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Throwable> failableToDoubleFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Object, org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Class<?>> objBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableLongConsumer> failableBiConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Throwable> suppliersFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.CharSequence> failableIntToLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.GenericDeclaration, java.lang.reflect.Type> genericDeclarationBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> failableObjDoubleConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> failableDoubleUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failableToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.io.Serializable, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> serializableFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableIntFunction, java.lang.reflect.GenericDeclaration> booleanConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableLongUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableDoublePredicate> failableDoubleToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Object, java.lang.CharSequence> objFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToDoubleFunction, java.io.Serializable, java.lang.Throwable> failableToDoubleFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableDoubleConsumer> failableLongUnaryOperatorBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Object, java.lang.reflect.Type, org.apache.commons.lang3.function.FailableObjDoubleConsumer> objBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failableIntUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableConsumer, java.lang.String, java.lang.Throwable> failableObjLongConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.BooleanConsumer, java.lang.Object> wildcardClassBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> failableIntUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Throwable> failablePredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableIntToDoubleFunction> failableToDoubleBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableIntPredicate> failableToLongBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableDoubleFunction> failableObjLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> failableToDoubleBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        java.lang.Class<?> wildcardClass45 = booleanConsumer14.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailablePredicate> failableLongUnaryOperatorBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        java.lang.Class<?> wildcardClass23 = booleanConsumer19.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> failableBiConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Object, java.lang.reflect.AnnotatedElement, java.lang.Throwable> objFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.CharSequence, java.lang.Class<?>> charSequenceFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.BooleanConsumer> failableBiPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableLongConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> typeFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableToDoubleBiFunction> failableLongUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer26.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer15.andThen(booleanConsumer30);
        booleanConsumer15.accept(false);
        booleanConsumer15.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer42.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer49.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer48.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer15.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer3.andThen(booleanConsumer61);
        java.lang.Class<?> wildcardClass63 = booleanConsumer3.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, java.io.Serializable> failableIntPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableConsumer> failableBiConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failableDoubleToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> wildcardClassFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        booleanConsumer25.accept(false);
        booleanConsumer25.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer21.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer50.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer39.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer34.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        booleanConsumer62.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer39.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer25.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer72.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer72.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer77.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = booleanConsumer77.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer76.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer71.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer8.andThen(booleanConsumer71);
        java.lang.Class<?> wildcardClass85 = booleanConsumer71.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableDoubleToLongFunction> failableIntToLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableIntUnaryOperator> genericDeclarationFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableToLongFunction> failableDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Comparable<java.lang.String>, java.lang.Throwable> failableDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer0.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = booleanConsumer0.andThen(booleanConsumer4);
        booleanConsumer4.accept(true);
        java.lang.Class<?> wildcardClass9 = booleanConsumer4.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Object> failableIntUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Comparable<java.lang.String>, java.lang.Throwable> failableLongToIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableBiConsumer> typeBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.CharSequence, org.apache.commons.lang3.function.FailableDoublePredicate> charSequenceBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> failableDoubleConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer13.andThen(booleanConsumer21);
        booleanConsumer21.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer8.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer26.andThen(booleanConsumer62);
        booleanConsumer26.accept(true);
        java.lang.Class<?> wildcardClass69 = booleanConsumer26.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Throwable> wildcardClassFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.Suppliers> failableToIntBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.reflect.GenericDeclaration> failableObjIntConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailablePredicate> charSequenceBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableLongUnaryOperator> suppliersFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Object, org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> objFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.reflect.AnnotatedElement> failableDoublePredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableDoubleToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableIntToLongFunction> failablePredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableBiConsumer> failableDoubleConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableDoubleUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> failableIntPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer0.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = booleanConsumer0.andThen(booleanConsumer4);
        booleanConsumer0.accept(true);
        booleanConsumer0.accept(false);
        java.lang.Class<?> wildcardClass11 = booleanConsumer0.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableLongConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> genericDeclarationFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> suppliersFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> failablePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.io.Serializable, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> serializableFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableToIntFunction> failableDoubleConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailablePredicate> failableIntToDoubleFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableDoubleFunction> failableToDoubleBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableLongPredicate> suppliersBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer0.accept(false);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer12.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer23.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer12.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer7.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        booleanConsumer35.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer12.andThen(booleanConsumer35);
        booleanConsumer35.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer47.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer58.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer47.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer47.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer70.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer70.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer74.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer81.andThen(booleanConsumer82);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer81.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer86.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer86.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer85.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer74.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer68.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer42.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer35.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer96 = booleanConsumer0.andThen(booleanConsumer35);
        booleanConsumer35.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer96);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableIntToLongFunction> failableToDoubleBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleConsumer, java.io.Serializable, java.lang.Throwable> failableDoubleConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> failableLongToDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failablePredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.reflect.GenericDeclaration, java.lang.Throwable> failableIntUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.String, org.apache.commons.lang3.function.FailableObjDoubleConsumer> strBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableIntConsumer> failableBiPredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableIntUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableBiFunction, java.lang.reflect.Type, java.lang.Throwable> failableBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> failableIntConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.reflect.AnnotatedElement> failableToIntBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableDoubleFunction> failableIntConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableIntConsumer, java.lang.Throwable> failableIntPredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntConsumer, java.lang.Throwable> failableObjIntConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction> failableToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> failableConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Supplier<org.apache.commons.lang3.function.FailableIntFunction> failableIntFunctionSupplier1 = org.apache.commons.lang3.function.MethodInvokers.asSupplier(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer9.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer9.andThen(booleanConsumer12);
        booleanConsumer12.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer20.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer27.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer26.andThen(booleanConsumer37);
        booleanConsumer37.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer48.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer60.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer59.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer48.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer43.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer71);
        booleanConsumer71.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer48.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer37.andThen(booleanConsumer75);
        booleanConsumer80.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer83.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer83.andThen(booleanConsumer86);
        booleanConsumer86.accept(false);
        booleanConsumer86.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer80.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer12.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer3.andThen(booleanConsumer93);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer95.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer98 = booleanConsumer3.andThen(booleanConsumer95);
        java.lang.Class<?> wildcardClass99 = booleanConsumer3.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.reflect.Type> failableLongToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableDoubleUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> annotatedElementFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> failableDoublePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.String, java.lang.Throwable> failableDoublePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.Suppliers, java.lang.Comparable<java.lang.String>> suppliersFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableBiFunction> failableObjLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> annotatedElementFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.lang3.function.FailableIntConsumer failableIntConsumer0 = org.apache.commons.lang3.function.FailableIntConsumer.NOP;
        java.lang.Class<?> wildcardClass1 = failableIntConsumer0.getClass();
        org.junit.Assert.assertNotNull(failableIntConsumer0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Object, org.apache.commons.lang3.function.FailableBiPredicate> failableToDoubleBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> failableDoubleToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableIntFunction, java.lang.Throwable> failableLongConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer23.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer27.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer34.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer38.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer27.andThen(booleanConsumer42);
        booleanConsumer27.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer19.andThen(booleanConsumer27);
        booleanConsumer19.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer48);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        java.lang.Class<?> wildcardClass51 = booleanConsumer20.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        booleanConsumer7.accept(false);
        java.lang.Class<?> wildcardClass29 = booleanConsumer7.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongFunction, java.lang.reflect.AnnotatedElement, java.lang.Throwable> failableLongFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> failableIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Comparable<java.lang.String>, java.lang.Object, org.apache.commons.lang3.function.FailableFunction> strComparableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, java.lang.String, java.lang.Object, java.lang.Throwable> failableLongUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        booleanConsumer41.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer62.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer67.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer62.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer41.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer36.andThen(booleanConsumer41);
        java.lang.Class<?> wildcardClass75 = booleanConsumer41.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Class<?>, org.apache.commons.lang3.function.FailableDoubleUnaryOperator> wildcardClassBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.io.Serializable, org.apache.commons.lang3.function.BooleanConsumer, java.lang.reflect.AnnotatedElement, java.lang.Throwable> serializableFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Throwable> failableDoublePredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableDoublePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableDoubleFunction> failableDoubleConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> booleanConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableDoubleFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.BooleanConsumer, java.lang.Throwable> failableLongUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.io.Serializable, java.lang.CharSequence> serializableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableObjLongConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.Object, org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.Throwable> objFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableIntPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableLongFunction> failableIntPredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableToDoubleFunction> failableIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableBiFunction> failableLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableLongPredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailablePredicate, java.lang.reflect.AnnotatedElement, java.lang.Throwable> failablePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = booleanConsumer1.andThen(booleanConsumer2);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer1.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = booleanConsumer6.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer6.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer5.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer16.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer5.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer5.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer43.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer32.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer26.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer0.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer58.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer58.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer57.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer69.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer68.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer57.andThen(booleanConsumer72);
        booleanConsumer72.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer50.andThen(booleanConsumer72);
        booleanConsumer50.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer78);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, java.io.Serializable, org.apache.commons.lang3.function.FailableIntToLongFunction> failableObjIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableFunction, java.lang.Throwable> annotatedElementFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.Object, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Throwable> objFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailablePredicate, java.lang.Throwable> charSequenceFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Class<?>> failableIntPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> failableIntConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleConsumer, java.io.Serializable> failableDoubleConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction> failableLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableToLongFunction> suppliersBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Throwable> failableDoubleFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        booleanConsumer30.accept(true);
        booleanConsumer30.accept(true);
        java.lang.Class<?> wildcardClass39 = booleanConsumer30.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer25.andThen(booleanConsumer62);
        booleanConsumer62.accept(false);
        java.lang.Class<?> wildcardClass69 = booleanConsumer62.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableDoubleUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.io.Serializable, java.lang.String> serializableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Throwable> booleanConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Class<?>, java.lang.String, org.apache.commons.lang3.function.FailableLongToDoubleFunction> wildcardClassBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableIntToLongFunction> failableLongToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableIntConsumer> failableConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableDoubleConsumer> failableConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer2.andThen(booleanConsumer3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.String, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> strFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableBiConsumer> failableIntToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer25.andThen(booleanConsumer62);
        booleanConsumer66.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Class<?>, org.apache.commons.lang3.function.FailableDoubleConsumer> wildcardClassFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableIntToDoubleFunction> failableLongToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.CharSequence, java.lang.Object, java.io.Serializable, java.lang.Throwable> charSequenceFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.String, java.lang.Throwable> failableObjLongConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailablePredicate> failableBiPredicateFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntConsumer, java.lang.reflect.GenericDeclaration> failableIntConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> failableConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableConsumer> failableIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableLongPredicate> failableToIntBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Throwable> suppliersFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableToDoubleFunction> failableDoublePredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableIntToLongFunction> failableDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableToIntBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> failableDoubleToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailablePredicate> failableToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableObjLongConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntPredicate> failableObjIntConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Throwable> failableToLongBiFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer10.andThen(booleanConsumer21);
        booleanConsumer21.accept(false);
        java.lang.Class<?> wildcardClass25 = booleanConsumer21.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.Object, org.apache.commons.lang3.function.FailableBiPredicate> objBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = booleanConsumer1.andThen(booleanConsumer2);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer1.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = booleanConsumer6.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer6.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer5.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer16.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer5.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer5.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer33.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer32.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer39.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer39.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer43.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer32.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer26.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer0.andThen(booleanConsumer50);
        booleanConsumer0.accept(true);
        java.lang.Class<?> wildcardClass55 = booleanConsumer0.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableObjIntConsumer> failableDoubleToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Object, org.apache.commons.lang3.function.FailableLongToIntFunction> objFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer9.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer9.andThen(booleanConsumer12);
        booleanConsumer12.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer20.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer27.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer26.andThen(booleanConsumer37);
        booleanConsumer37.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer48.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer60.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer59.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer48.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer43.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer71);
        booleanConsumer71.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer48.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer37.andThen(booleanConsumer75);
        booleanConsumer80.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer83.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer83.andThen(booleanConsumer86);
        booleanConsumer86.accept(false);
        booleanConsumer86.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer80.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer12.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer3.andThen(booleanConsumer93);
        booleanConsumer3.accept(true);
        java.lang.Class<?> wildcardClass97 = booleanConsumer3.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.Class<?>> failableLongToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableDoubleToLongFunction> failableLongPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.io.Serializable, org.apache.commons.lang3.function.Suppliers> serializableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableIntFunction> failableToIntBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableToDoubleBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.io.Serializable, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> serializableFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.reflect.GenericDeclaration> annotatedElementBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> failableToLongBiFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer0.accept(false);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer12.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer23.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer12.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer7.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        booleanConsumer35.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer12.andThen(booleanConsumer35);
        booleanConsumer35.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer47.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer58.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer47.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer47.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer70.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer70.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer74.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer81.andThen(booleanConsumer82);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer81.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer86.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer86.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer85.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer74.andThen(booleanConsumer89);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer68.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer42.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer35.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer96 = booleanConsumer0.andThen(booleanConsumer35);
        booleanConsumer0.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer96);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongConsumer> failableIntConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableDoubleFunction> typeFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> failableLongUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> failableLongUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.String, org.apache.commons.lang3.function.FailableIntUnaryOperator> strFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableToLongBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Object, org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableObjIntConsumer> objBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableIntPredicate> failableLongUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.io.Serializable, java.lang.reflect.Type> serializableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Class<?>, java.lang.Throwable> failableDoubleToLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableIntToDoubleFunction> suppliersFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableObjLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.reflect.Type, java.io.Serializable, java.lang.Throwable> failableObjLongConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Comparable<java.lang.String>> failableToDoubleBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer9.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer9.andThen(booleanConsumer12);
        booleanConsumer12.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer20.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer27.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer26.andThen(booleanConsumer37);
        booleanConsumer37.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer48.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer60.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer59.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer48.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer43.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer71);
        booleanConsumer71.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer48.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer37.andThen(booleanConsumer75);
        booleanConsumer80.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer83.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer83.andThen(booleanConsumer86);
        booleanConsumer86.accept(false);
        booleanConsumer86.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer80.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer12.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer3.andThen(booleanConsumer93);
        java.lang.Class<?> wildcardClass95 = booleanConsumer93.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableToIntFunction, java.lang.Throwable> failableLongUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableLongPredicate> failableIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToIntFunction, java.lang.reflect.GenericDeclaration, java.lang.Throwable> failableToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableIntToLongFunction> failableIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableBiFunction> failableDoubleUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.reflect.AnnotatedElement> failableIntToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer13.andThen(booleanConsumer21);
        booleanConsumer21.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer8.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer26.andThen(booleanConsumer62);
        java.lang.Class<?> wildcardClass67 = booleanConsumer26.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableIntConsumer> booleanConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Comparable<java.lang.String>> failableBiConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableLongPredicate> charSequenceBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.String> failableObjLongConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableDoubleFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Object> failableBiConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableBiConsumer, org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Throwable> failableBiConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> typeFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableConsumer, java.lang.Throwable> failableToLongBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.lang.Throwable> failableDoubleToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableLongUnaryOperator, java.lang.Throwable> failableConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleFunction> failableToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableFunction> failableToLongBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.BooleanConsumer, java.lang.Throwable> failableIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Class<?>, org.apache.commons.lang3.function.FailableToLongFunction> wildcardClassFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.reflect.Type, java.io.Serializable, java.lang.Throwable> typeFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        booleanConsumer20.accept(false);
        java.lang.Class<?> wildcardClass53 = booleanConsumer20.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableIntPredicate> annotatedElementBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Class<?>> strComparableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        booleanConsumer30.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer42.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer53.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer42.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer42.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer65.andThen(booleanConsumer66);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer65.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer70.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer70.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer69.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer76.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer81.andThen(booleanConsumer82);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer81.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = booleanConsumer80.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer69.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer63.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = booleanConsumer37.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer30.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer91.andThen(booleanConsumer92);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer95 = booleanConsumer91.andThen(booleanConsumer94);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer96 = booleanConsumer30.andThen(booleanConsumer91);
        java.lang.Class<?> wildcardClass97 = booleanConsumer30.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
        org.junit.Assert.assertNotNull(booleanConsumer95);
        org.junit.Assert.assertNotNull(booleanConsumer96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Throwable> charSequenceFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        booleanConsumer56.accept(false);
        booleanConsumer56.accept(true);
        booleanConsumer56.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer64.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer69.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer68.andThen(booleanConsumer72);
        booleanConsumer68.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer56.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer29.andThen(booleanConsumer77);
        booleanConsumer77.accept(true);
        java.lang.Class<?> wildcardClass81 = booleanConsumer77.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.Type, java.lang.CharSequence> typeBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableFunction, java.lang.Throwable> failableConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.Throwable> failablePredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> suppliersFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableIntConsumer, java.lang.Class<?>> failableDoublePredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        booleanConsumer29.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer20.andThen(booleanConsumer29);
        booleanConsumer29.accept(true);
        booleanConsumer29.accept(true);
        java.lang.Class<?> wildcardClass55 = booleanConsumer29.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableObjLongConsumer> failableBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction> failableObjDoubleConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableIntFunction> failableToLongBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer25.andThen(booleanConsumer62);
        booleanConsumer25.accept(false);
        java.lang.Class<?> wildcardClass69 = booleanConsumer25.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableDoubleUnaryOperatorBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.Suppliers> failableLongUnaryOperatorBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.Object, org.apache.commons.lang3.function.FailableLongFunction, java.lang.Throwable> objFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer41.andThen(booleanConsumer62);
        booleanConsumer62.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer66.accept(false);
        booleanConsumer66.accept(true);
        booleanConsumer66.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer62.andThen(booleanConsumer66);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer4.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer75.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer78.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = booleanConsumer75.andThen(booleanConsumer79);
        booleanConsumer75.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer4.andThen(booleanConsumer75);
        java.lang.Class<?> wildcardClass85 = booleanConsumer75.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Object, java.lang.Throwable> charSequenceFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableLongToDoubleFunction> failableObjLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableLongPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableToIntBiFunction> failableDoubleToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableIntToDoubleFunction> genericDeclarationFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer34.andThen(booleanConsumer35);
        booleanConsumer35.accept(true);
        java.lang.Class<?> wildcardClass41 = booleanConsumer35.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableLongFunction, java.lang.Class<?>, java.lang.Throwable> failableLongFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.reflect.GenericDeclaration> failableToLongBiFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(true);
        booleanConsumer8.accept(false);
        booleanConsumer8.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = booleanConsumer17.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer17.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer8.andThen(booleanConsumer20);
        java.lang.Class<?> wildcardClass23 = booleanConsumer20.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.Throwable> failableLongConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableObjLongConsumer> failableToDoubleFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator> failableLongToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer13.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        booleanConsumer27.accept(false);
        booleanConsumer27.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer23.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer36.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer41.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer27.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer8.andThen(booleanConsumer27);
        booleanConsumer27.accept(true);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Comparable<java.lang.String>, java.io.Serializable> strComparableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailablePredicate, java.lang.Object, java.lang.Throwable> failableIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableDoubleFunction> suppliersBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> failableToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableBiConsumer, java.io.Serializable, org.apache.commons.lang3.function.FailableDoublePredicate> failableBiConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableLongConsumer, org.apache.commons.lang3.function.FailableDoubleConsumer> failableIntUnaryOperatorBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> failablePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Class<?>, org.apache.commons.lang3.function.FailableIntFunction> wildcardClassFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer7.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer7.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = booleanConsumer12.andThen(booleanConsumer13);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer12.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer11.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer23.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer18.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer17.andThen(booleanConsumer28);
        booleanConsumer28.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer50.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer39.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer34.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        booleanConsumer62.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer39.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer28.andThen(booleanConsumer66);
        booleanConsumer71.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer74.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer74.andThen(booleanConsumer77);
        booleanConsumer77.accept(false);
        booleanConsumer77.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer71.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer3.andThen(booleanConsumer71);
        booleanConsumer71.accept(false);
        java.lang.Class<?> wildcardClass87 = booleanConsumer71.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntPredicate, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableIntPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> failableLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer18.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer13.andThen(booleanConsumer18);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer10.andThen(booleanConsumer18);
        java.lang.Class<?> wildcardClass39 = booleanConsumer10.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(true);
        booleanConsumer8.accept(false);
        java.lang.Class<?> wildcardClass15 = booleanConsumer8.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableDoubleToLongFunction> suppliersBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableDoubleFunction> failableIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, java.lang.reflect.AnnotatedElement, java.lang.CharSequence, java.lang.Throwable> failableObjLongConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.reflect.GenericDeclaration> failableIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Throwable> failableLongUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        java.lang.Class<?> wildcardClass27 = booleanConsumer4.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failableLongToDoubleFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> charSequenceFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableLongConsumer> failableDoubleUnaryOperatorFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Throwable> booleanConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer31.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer38.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer37.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer4.andThen(booleanConsumer48);
        java.lang.Class<?> wildcardClass51 = booleanConsumer50.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        booleanConsumer4.accept(false);
        java.lang.Class<?> wildcardClass27 = booleanConsumer4.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.GenericDeclaration, java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableIntConsumer> genericDeclarationBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableDoublePredicate> failableObjLongConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.String, org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailablePredicate, java.lang.Throwable> strFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Object, org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> objFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer0.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer7.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer10.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        booleanConsumer7.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer0.andThen(booleanConsumer7);
        java.lang.Class<?> wildcardClass17 = booleanConsumer7.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableObjDoubleConsumer> failableConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.CharSequence, org.apache.commons.lang3.function.FailableLongToDoubleFunction, org.apache.commons.lang3.function.FailableIntToDoubleFunction> charSequenceBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableIntToLongFunction> failableObjIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Object, org.apache.commons.lang3.function.FailableObjDoubleConsumer, java.lang.Throwable> failableIntPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongToDoubleFunction, java.io.Serializable> failableLongToDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        booleanConsumer8.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer13.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = booleanConsumer13.andThen(booleanConsumer16);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer18.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer18.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer13.andThen(booleanConsumer21);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        booleanConsumer27.accept(false);
        booleanConsumer27.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer23.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer34.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer36.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        booleanConsumer64.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer41.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer69.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer27.andThen(booleanConsumer72);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer8.andThen(booleanConsumer27);
        java.lang.Class<?> wildcardClass75 = booleanConsumer27.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableDoubleToLongFunction> failableConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> failableToIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableObjIntConsumer, java.lang.Throwable> failablePredicateFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntFunction, java.io.Serializable, java.lang.Throwable> failableIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Throwable> suppliersFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator> failableToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableDoublePredicate> failableConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer25.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer42.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer42.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer41.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer52.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer41.andThen(booleanConsumer56);
        booleanConsumer41.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer62.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer67.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer62.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = booleanConsumer41.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer36.andThen(booleanConsumer41);
        java.lang.Class<?> wildcardClass75 = booleanConsumer74.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.BooleanConsumer> failableObjIntConsumerBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableObjIntConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableToLongBiFunction, java.lang.Throwable> failableIntFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableBiFunction> failableLongPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, java.lang.Class<?>, java.lang.Throwable> failableDoubleUnaryOperatorFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        booleanConsumer30.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer38.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer38.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer43.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer43.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer42.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer53.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer42.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer42.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer65.andThen(booleanConsumer66);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer65.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer70.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer70.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer69.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer76.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer81.andThen(booleanConsumer82);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer81.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = booleanConsumer80.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer69.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer63.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = booleanConsumer37.andThen(booleanConsumer87);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer30.andThen(booleanConsumer87);
        java.lang.Class<?> wildcardClass91 = booleanConsumer30.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableObjDoubleConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableLongUnaryOperator, org.apache.commons.lang3.function.FailableDoubleConsumer> failableDoublePredicateBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableDoubleFunction> failableLongToIntFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntUnaryOperator, org.apache.commons.lang3.function.FailableIntToLongFunction, java.lang.reflect.GenericDeclaration, java.lang.Throwable> failableIntUnaryOperatorFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, org.apache.commons.lang3.function.Suppliers, org.apache.commons.lang3.function.FailableIntToDoubleFunction, java.lang.Throwable> failableToIntBiFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableDoubleConsumer, java.lang.Throwable> genericDeclarationFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableIntPredicate, java.lang.Throwable> failableDoubleUnaryOperatorFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableDoubleFunction> failableDoubleUnaryOperatorBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, java.lang.Throwable> failableLongToIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntConsumer, org.apache.commons.lang3.function.FailableLongConsumer, java.lang.Class<?>> failableIntConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableDoubleToLongFunction, java.lang.Throwable> failableLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableDoublePredicate, org.apache.commons.lang3.function.FailableObjDoubleConsumer, org.apache.commons.lang3.function.FailableBiFunction, java.lang.Throwable> failableDoublePredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        booleanConsumer3.accept(false);
        booleanConsumer3.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = booleanConsumer9.andThen(booleanConsumer10);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer9.andThen(booleanConsumer12);
        booleanConsumer12.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer20.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer27.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer26.andThen(booleanConsumer37);
        booleanConsumer37.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer44.andThen(booleanConsumer45);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer44.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer49.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer49.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer48.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer58);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer60.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer60.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer59.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer48.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer43.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer68.andThen(booleanConsumer69);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = booleanConsumer68.andThen(booleanConsumer71);
        booleanConsumer71.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = booleanConsumer48.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = booleanConsumer76.andThen(booleanConsumer77);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer75.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer37.andThen(booleanConsumer75);
        booleanConsumer80.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer83.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer83.andThen(booleanConsumer86);
        booleanConsumer86.accept(false);
        booleanConsumer86.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer92 = booleanConsumer80.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer93 = booleanConsumer12.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer94 = booleanConsumer3.andThen(booleanConsumer93);
        booleanConsumer3.accept(true);
        booleanConsumer3.accept(false);
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer92);
        org.junit.Assert.assertNotNull(booleanConsumer93);
        org.junit.Assert.assertNotNull(booleanConsumer94);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.String, java.lang.reflect.AnnotatedElement, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> strFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Throwable> failableBiPredicateFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Class<?>, org.apache.commons.lang3.function.FailableLongToIntFunction, org.apache.commons.lang3.function.FailableDoubleFunction, java.lang.Throwable> wildcardClassFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.CharSequence, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> charSequenceFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableBiFunction> failableToIntFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        booleanConsumer20.accept(true);
        booleanConsumer20.accept(false);
        booleanConsumer20.accept(false);
        java.lang.Class<?> wildcardClass27 = booleanConsumer20.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.FailableDoubleToLongFunction> booleanConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        booleanConsumer4.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer25.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer25.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = booleanConsumer29.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer36.andThen(booleanConsumer37);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer36.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer40.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer29.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer29.andThen(booleanConsumer50);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer4.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer53.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer53.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer58.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = booleanConsumer58.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer53.andThen(booleanConsumer61);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer64.andThen(booleanConsumer65);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer67.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer72.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer72.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = booleanConsumer71.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = booleanConsumer78.andThen(booleanConsumer79);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer78.andThen(booleanConsumer81);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = booleanConsumer83.andThen(booleanConsumer84);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer87 = booleanConsumer83.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer88 = booleanConsumer82.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer89 = booleanConsumer71.andThen(booleanConsumer86);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer90 = booleanConsumer66.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer91 = booleanConsumer63.andThen(booleanConsumer71);
        booleanConsumer63.accept(true);
        booleanConsumer63.accept(false);
        booleanConsumer63.accept(true);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer98 = booleanConsumer4.andThen(booleanConsumer63);
        java.lang.Class<?> wildcardClass99 = booleanConsumer4.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
        org.junit.Assert.assertNotNull(booleanConsumer85);
        org.junit.Assert.assertNotNull(booleanConsumer86);
        org.junit.Assert.assertNotNull(booleanConsumer87);
        org.junit.Assert.assertNotNull(booleanConsumer88);
        org.junit.Assert.assertNotNull(booleanConsumer89);
        org.junit.Assert.assertNotNull(booleanConsumer90);
        org.junit.Assert.assertNotNull(booleanConsumer91);
        org.junit.Assert.assertNotNull(booleanConsumer98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableToLongBiFunction, org.apache.commons.lang3.function.FailableToIntFunction, java.lang.Throwable> failableIntToLongFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableDoubleToIntFunction, java.lang.Class<?>, java.lang.Throwable> failableLongPredicateFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailablePredicate, org.apache.commons.lang3.function.FailableIntUnaryOperator, java.lang.Throwable> failableFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToLongFunction, java.io.Serializable, org.apache.commons.lang3.function.FailableIntToLongFunction> failableIntToLongFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableBiPredicate, org.apache.commons.lang3.function.FailableLongConsumer> failableBiPredicateBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> failableToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableIntFunction, org.apache.commons.lang3.function.FailableToDoubleBiFunction, org.apache.commons.lang3.function.FailableToLongFunction, java.lang.Throwable> failableIntFunctionFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = booleanConsumer23.andThen(booleanConsumer26);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer28.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer28.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer23.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        booleanConsumer34.accept(false);
        booleanConsumer34.accept(true);
        booleanConsumer34.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer33.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer22.andThen(booleanConsumer33);
        booleanConsumer22.accept(false);
        java.lang.Class<?> wildcardClass45 = booleanConsumer22.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableDoubleToIntFunction, org.apache.commons.lang3.function.FailableLongToIntFunction, java.lang.Throwable> failableDoubleToIntFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableDoubleToLongFunction> failableFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.Suppliers, java.lang.Throwable> booleanConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.lang3.function.FailableLongPredicate failableLongPredicate0 = org.apache.commons.lang3.function.FailableLongPredicate.TRUE;
        java.lang.Class<?> wildcardClass1 = failableLongPredicate0.getClass();
        org.junit.Assert.assertNotNull(failableLongPredicate0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = booleanConsumer3.andThen(booleanConsumer4);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer3.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer8.andThen(booleanConsumer9);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = booleanConsumer8.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer7.andThen(booleanConsumer11);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = booleanConsumer14.andThen(booleanConsumer15);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer14.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer19.andThen(booleanConsumer20);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer19.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer18.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer7.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer2.andThen(booleanConsumer7);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer27.andThen(booleanConsumer30);
        booleanConsumer30.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer7.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = booleanConsumer34.andThen(booleanConsumer35);
        booleanConsumer35.accept(true);
        booleanConsumer35.accept(false);
        java.lang.Class<?> wildcardClass43 = booleanConsumer35.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.lang.reflect.GenericDeclaration, org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailableToLongBiFunction> genericDeclarationBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableLongPredicate, java.lang.Throwable> failableConsumerFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer21.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer26.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = booleanConsumer26.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer25.andThen(booleanConsumer29);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = booleanConsumer32.andThen(booleanConsumer35);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer37.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = booleanConsumer37.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer32.andThen(booleanConsumer40);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer31.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer14.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer45.andThen(booleanConsumer46);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = booleanConsumer45.andThen(booleanConsumer48);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer50.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = booleanConsumer50.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer49.andThen(booleanConsumer53);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer56.andThen(booleanConsumer59);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer60.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = booleanConsumer49.andThen(booleanConsumer64);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = booleanConsumer44.andThen(booleanConsumer67);
        java.lang.Class<?> wildcardClass69 = booleanConsumer68.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoubleConsumer, org.apache.commons.lang3.function.BooleanConsumer, org.apache.commons.lang3.function.FailableLongConsumer> failableDoubleConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableObjLongConsumer> failableDoubleToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> failableDoubleFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer62.andThen(booleanConsumer63);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer65 = booleanConsumer61.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer25.andThen(booleanConsumer62);
        booleanConsumer62.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer62.andThen(booleanConsumer69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(booleanConsumer65);
        org.junit.Assert.assertNotNull(booleanConsumer66);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleFunction, org.apache.commons.lang3.function.FailableBiPredicate> failableDoubleFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Throwable> failableIntToLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableDoubleUnaryOperator, org.apache.commons.lang3.function.FailableToIntFunction> failableDoubleUnaryOperatorBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<java.io.Serializable, org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableToLongBiFunction> serializableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<java.lang.Object, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> objFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableIntFunction> failableToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, java.lang.Throwable> failableFunctionFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableBiPredicate> failableBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiFunction<java.lang.Object, org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.FailableDoublePredicate, java.lang.Throwable> objFailableBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableToIntBiFunction, java.lang.Comparable<java.lang.String>, org.apache.commons.lang3.function.FailableIntPredicate> failableToIntBiFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableIntToDoubleFunction, org.apache.commons.lang3.function.FailableToDoubleFunction, org.apache.commons.lang3.function.FailableConsumer> failableIntToDoubleFunctionBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<java.lang.reflect.Type, org.apache.commons.lang3.function.FailableLongPredicate> typeBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableLongConsumer> failableToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableToIntFunction> failableToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiFunction<org.apache.commons.lang3.function.FailableObjLongConsumer, org.apache.commons.lang3.function.FailableLongPredicate, org.apache.commons.lang3.function.BooleanConsumer> failableObjLongConsumerBiFunction1 = org.apache.commons.lang3.function.MethodInvokers.asBiFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableDoubleToLongFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableDoubleToLongFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableIntToLongFunction> failableLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<java.lang.Object, java.lang.Class<?>> objFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer11.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = booleanConsumer22.andThen(booleanConsumer23);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer22.andThen(booleanConsumer25);
        booleanConsumer25.accept(false);
        booleanConsumer25.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer21.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer32.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer51.andThen(booleanConsumer52);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer51.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer50.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = booleanConsumer39.andThen(booleanConsumer54);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer34.andThen(booleanConsumer39);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer59.andThen(booleanConsumer60);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer62 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer63 = booleanConsumer59.andThen(booleanConsumer62);
        booleanConsumer62.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer66 = booleanConsumer39.andThen(booleanConsumer62);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer67 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer68 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer69 = booleanConsumer67.andThen(booleanConsumer68);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer70 = booleanConsumer66.andThen(booleanConsumer67);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer71 = booleanConsumer25.andThen(booleanConsumer70);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer72 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer73 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer74 = booleanConsumer72.andThen(booleanConsumer73);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer75 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer76 = booleanConsumer72.andThen(booleanConsumer75);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer77 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer78 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer79 = booleanConsumer77.andThen(booleanConsumer78);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer80 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer81 = booleanConsumer77.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer82 = booleanConsumer76.andThen(booleanConsumer80);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer83 = booleanConsumer71.andThen(booleanConsumer76);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer84 = booleanConsumer8.andThen(booleanConsumer71);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.BooleanConsumer booleanConsumer86 = booleanConsumer84.andThen(booleanConsumer85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer62);
        org.junit.Assert.assertNotNull(booleanConsumer63);
        org.junit.Assert.assertNotNull(booleanConsumer66);
        org.junit.Assert.assertNotNull(booleanConsumer67);
        org.junit.Assert.assertNotNull(booleanConsumer68);
        org.junit.Assert.assertNotNull(booleanConsumer69);
        org.junit.Assert.assertNotNull(booleanConsumer70);
        org.junit.Assert.assertNotNull(booleanConsumer71);
        org.junit.Assert.assertNotNull(booleanConsumer72);
        org.junit.Assert.assertNotNull(booleanConsumer73);
        org.junit.Assert.assertNotNull(booleanConsumer74);
        org.junit.Assert.assertNotNull(booleanConsumer75);
        org.junit.Assert.assertNotNull(booleanConsumer76);
        org.junit.Assert.assertNotNull(booleanConsumer77);
        org.junit.Assert.assertNotNull(booleanConsumer78);
        org.junit.Assert.assertNotNull(booleanConsumer79);
        org.junit.Assert.assertNotNull(booleanConsumer80);
        org.junit.Assert.assertNotNull(booleanConsumer81);
        org.junit.Assert.assertNotNull(booleanConsumer82);
        org.junit.Assert.assertNotNull(booleanConsumer83);
        org.junit.Assert.assertNotNull(booleanConsumer84);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer0.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        booleanConsumer14.accept(false);
        booleanConsumer14.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer10.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = booleanConsumer21.andThen(booleanConsumer22);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer24.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = booleanConsumer24.andThen(booleanConsumer27);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = booleanConsumer29.andThen(booleanConsumer30);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = booleanConsumer29.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer28.andThen(booleanConsumer32);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = booleanConsumer40.andThen(booleanConsumer41);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = booleanConsumer40.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer39.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = booleanConsumer28.andThen(booleanConsumer43);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = booleanConsumer23.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer48.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer48.andThen(booleanConsumer51);
        booleanConsumer51.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = booleanConsumer28.andThen(booleanConsumer51);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer56.andThen(booleanConsumer57);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer59 = booleanConsumer55.andThen(booleanConsumer56);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer60 = booleanConsumer14.andThen(booleanConsumer59);
        booleanConsumer14.accept(false);
        java.lang.Class<?> wildcardClass63 = booleanConsumer14.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer59);
        org.junit.Assert.assertNotNull(booleanConsumer60);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableLongToDoubleFunction> failableConsumerFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer0 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer1 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer2 = booleanConsumer0.andThen(booleanConsumer1);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer3 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer4 = booleanConsumer0.andThen(booleanConsumer3);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer5 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer6 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer7 = booleanConsumer5.andThen(booleanConsumer6);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer8 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer9 = booleanConsumer5.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer10 = booleanConsumer4.andThen(booleanConsumer8);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer11 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer12 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer13 = booleanConsumer11.andThen(booleanConsumer12);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer14 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer15 = booleanConsumer11.andThen(booleanConsumer14);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer16 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer17 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer18 = booleanConsumer16.andThen(booleanConsumer17);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer19 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer20 = booleanConsumer16.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer21 = booleanConsumer15.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer22 = booleanConsumer4.andThen(booleanConsumer19);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer23 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer24 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer25 = booleanConsumer23.andThen(booleanConsumer24);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer26 = booleanConsumer4.andThen(booleanConsumer25);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer27 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer28 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer29 = booleanConsumer27.andThen(booleanConsumer28);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer30 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer31 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer32 = booleanConsumer30.andThen(booleanConsumer31);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer33 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer34 = booleanConsumer30.andThen(booleanConsumer33);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer35 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer36 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer37 = booleanConsumer35.andThen(booleanConsumer36);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer38 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer39 = booleanConsumer35.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer40 = booleanConsumer34.andThen(booleanConsumer38);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer41 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer42 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer43 = booleanConsumer41.andThen(booleanConsumer42);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer44 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer45 = booleanConsumer41.andThen(booleanConsumer44);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer46 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer47 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer48 = booleanConsumer46.andThen(booleanConsumer47);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer49 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer50 = booleanConsumer46.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer51 = booleanConsumer45.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer52 = booleanConsumer34.andThen(booleanConsumer49);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer53 = booleanConsumer29.andThen(booleanConsumer34);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer54 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer55 = org.apache.commons.lang3.function.BooleanConsumer.NOP;
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer56 = booleanConsumer54.andThen(booleanConsumer55);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer57 = org.apache.commons.lang3.function.BooleanConsumer.nop();
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer58 = booleanConsumer54.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer61 = booleanConsumer34.andThen(booleanConsumer57);
        booleanConsumer57.accept(false);
        org.apache.commons.lang3.function.BooleanConsumer booleanConsumer64 = booleanConsumer25.andThen(booleanConsumer57);
        java.lang.Class<?> wildcardClass65 = booleanConsumer64.getClass();
        org.junit.Assert.assertNotNull(booleanConsumer0);
        org.junit.Assert.assertNotNull(booleanConsumer1);
        org.junit.Assert.assertNotNull(booleanConsumer2);
        org.junit.Assert.assertNotNull(booleanConsumer3);
        org.junit.Assert.assertNotNull(booleanConsumer4);
        org.junit.Assert.assertNotNull(booleanConsumer5);
        org.junit.Assert.assertNotNull(booleanConsumer6);
        org.junit.Assert.assertNotNull(booleanConsumer7);
        org.junit.Assert.assertNotNull(booleanConsumer8);
        org.junit.Assert.assertNotNull(booleanConsumer9);
        org.junit.Assert.assertNotNull(booleanConsumer10);
        org.junit.Assert.assertNotNull(booleanConsumer11);
        org.junit.Assert.assertNotNull(booleanConsumer12);
        org.junit.Assert.assertNotNull(booleanConsumer13);
        org.junit.Assert.assertNotNull(booleanConsumer14);
        org.junit.Assert.assertNotNull(booleanConsumer15);
        org.junit.Assert.assertNotNull(booleanConsumer16);
        org.junit.Assert.assertNotNull(booleanConsumer17);
        org.junit.Assert.assertNotNull(booleanConsumer18);
        org.junit.Assert.assertNotNull(booleanConsumer19);
        org.junit.Assert.assertNotNull(booleanConsumer20);
        org.junit.Assert.assertNotNull(booleanConsumer21);
        org.junit.Assert.assertNotNull(booleanConsumer22);
        org.junit.Assert.assertNotNull(booleanConsumer23);
        org.junit.Assert.assertNotNull(booleanConsumer24);
        org.junit.Assert.assertNotNull(booleanConsumer25);
        org.junit.Assert.assertNotNull(booleanConsumer26);
        org.junit.Assert.assertNotNull(booleanConsumer27);
        org.junit.Assert.assertNotNull(booleanConsumer28);
        org.junit.Assert.assertNotNull(booleanConsumer29);
        org.junit.Assert.assertNotNull(booleanConsumer30);
        org.junit.Assert.assertNotNull(booleanConsumer31);
        org.junit.Assert.assertNotNull(booleanConsumer32);
        org.junit.Assert.assertNotNull(booleanConsumer33);
        org.junit.Assert.assertNotNull(booleanConsumer34);
        org.junit.Assert.assertNotNull(booleanConsumer35);
        org.junit.Assert.assertNotNull(booleanConsumer36);
        org.junit.Assert.assertNotNull(booleanConsumer37);
        org.junit.Assert.assertNotNull(booleanConsumer38);
        org.junit.Assert.assertNotNull(booleanConsumer39);
        org.junit.Assert.assertNotNull(booleanConsumer40);
        org.junit.Assert.assertNotNull(booleanConsumer41);
        org.junit.Assert.assertNotNull(booleanConsumer42);
        org.junit.Assert.assertNotNull(booleanConsumer43);
        org.junit.Assert.assertNotNull(booleanConsumer44);
        org.junit.Assert.assertNotNull(booleanConsumer45);
        org.junit.Assert.assertNotNull(booleanConsumer46);
        org.junit.Assert.assertNotNull(booleanConsumer47);
        org.junit.Assert.assertNotNull(booleanConsumer48);
        org.junit.Assert.assertNotNull(booleanConsumer49);
        org.junit.Assert.assertNotNull(booleanConsumer50);
        org.junit.Assert.assertNotNull(booleanConsumer51);
        org.junit.Assert.assertNotNull(booleanConsumer52);
        org.junit.Assert.assertNotNull(booleanConsumer53);
        org.junit.Assert.assertNotNull(booleanConsumer54);
        org.junit.Assert.assertNotNull(booleanConsumer55);
        org.junit.Assert.assertNotNull(booleanConsumer56);
        org.junit.Assert.assertNotNull(booleanConsumer57);
        org.junit.Assert.assertNotNull(booleanConsumer58);
        org.junit.Assert.assertNotNull(booleanConsumer61);
        org.junit.Assert.assertNotNull(booleanConsumer64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableObjIntConsumer, org.apache.commons.lang3.function.FailablePredicate, java.lang.Throwable> failableObjIntConsumerFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableFunction<org.apache.commons.lang3.function.FailableIntToLongFunction, org.apache.commons.lang3.function.FailableLongUnaryOperator, java.lang.Throwable> failableIntToLongFunctionFailableFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.Function<org.apache.commons.lang3.function.FailableBiFunction, org.apache.commons.lang3.function.FailableIntUnaryOperator> failableBiFunctionFunction1 = org.apache.commons.lang3.function.MethodInvokers.asFunction(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToLongFunction, org.apache.commons.lang3.function.FailableToDoubleFunction> failableToLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableToIntFunction, org.apache.commons.lang3.function.FailableDoubleConsumer> failableToIntFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.function.FailableBiConsumer<org.apache.commons.lang3.function.FailableConsumer, org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Throwable> failableConsumerFailableBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        java.lang.reflect.Method method0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.function.BiConsumer<org.apache.commons.lang3.function.FailableLongFunction, org.apache.commons.lang3.function.FailableLongPredicate> failableLongFunctionBiConsumer1 = org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(method0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: method");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }
}

